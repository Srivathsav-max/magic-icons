{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "Icon Metadata Schema",
	"description": "Schema template for individual icon metadata files",
	"type": "object",
	"required": ["id", "name", "category", "variants", "metadata"],
	"properties": {
		"id": {
			"type": "string",
			"description": "Unique identifier for the icon (kebab-case)",
			"pattern": "^[a-z0-9]+(-[a-z0-9]+)*$",
			"examples": ["user", "arrow-up", "message"]
		},
		"name": {
			"type": "string",
			"description": "Display name of the icon",
			"examples": ["User", "Arrow Up", "Message"]
		},
		"componentBaseName": {
			"type": "string",
			"description": "Base component name without variant suffix",
			"examples": ["User", "ArrowUp", "Message"]
		},
		"category": {
			"type": "string",
			"description": "Primary category this icon belongs to",
			"enum": [
				"user",
				"communication",
				"navigation",
				"media",
				"file",
				"commerce",
				"action",
				"security",
				"ui",
				"data",
				"time",
				"location",
				"status",
				"work",
				"misc"
			]
		},
		"tags": {
			"type": "array",
			"description": "Additional tags for searchability",
			"items": {
				"type": "string"
			},
			"examples": [["profile", "account", "person"]]
		},
		"aliases": {
			"type": "array",
			"description": "Alternative names for the icon",
			"items": {
				"type": "string"
			},
			"examples": [["profile", "account"]]
		},
		"description": {
			"type": "string",
			"description": "Detailed description of the icon's purpose",
			"examples": ["Icon representing a user profile or account"]
		},
		"variants": {
			"type": "object",
			"description": "Available variants of this icon",
			"properties": {
				"outline": {
					"$ref": "#/definitions/variantInfo"
				},
				"bulk": {
					"$ref": "#/definitions/variantInfo"
				},
				"broken": {
					"$ref": "#/definitions/variantInfo"
				},
				"light": {
					"$ref": "#/definitions/variantInfo"
				},
				"twoTone": {
					"$ref": "#/definitions/variantInfo"
				}
			}
		},
		"metadata": {
			"type": "object",
			"properties": {
				"addedDate": {
					"type": "string",
					"format": "date",
					"description": "Date when icon was added"
				},
				"lastModified": {
					"type": "string",
					"format": "date",
					"description": "Date of last modification"
				},
				"version": {
					"type": "string",
					"description": "Version number",
					"pattern": "^\\d+\\.\\d+\\.\\d+$"
				},
				"author": {
					"type": "string",
					"description": "Original creator"
				},
				"popularity": {
					"type": "number",
					"description": "Usage popularity score (0-100)",
					"minimum": 0,
					"maximum": 100
				},
				"isDeprecated": {
					"type": "boolean",
					"description": "Whether this icon is deprecated",
					"default": false
				},
				"replacedBy": {
					"type": "string",
					"description": "Icon ID that replaces this one if deprecated"
				}
			},
			"required": ["addedDate", "version"]
		},
		"usage": {
			"type": "object",
			"description": "Usage recommendations and examples",
			"properties": {
				"recommended": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"examples": [["User profiles", "Account settings", "Login pages"]]
				},
				"codeExample": {
					"type": "string",
					"description": "Code example for using this icon"
				}
			}
		},
		"accessibility": {
			"type": "object",
			"properties": {
				"ariaLabel": {
					"type": "string",
					"description": "Recommended ARIA label"
				},
				"title": {
					"type": "string",
					"description": "Title for accessibility"
				}
			}
		}
	},
	"definitions": {
		"variantInfo": {
			"type": "object",
			"properties": {
				"available": {
					"type": "boolean",
					"description": "Whether this variant is available"
				},
				"componentName": {
					"type": "string",
					"description": "Full component name with variant suffix"
				},
				"svgPath": {
					"type": "string",
					"description": "Path to SVG source file"
				},
				"componentPath": {
					"type": "string",
					"description": "Path to generated React component"
				},
				"supportsStrokeWidth": {
					"type": "boolean",
					"description": "Whether stroke width can be customized"
				},
				"defaultStrokeWidth": {
					"type": "number",
					"description": "Default stroke width value"
				},
				"fillType": {
					"type": "string",
					"enum": ["fill", "stroke", "mixed"],
					"description": "How the icon handles colors"
				}
			},
			"required": ["available", "componentName"]
		}
	}
}
